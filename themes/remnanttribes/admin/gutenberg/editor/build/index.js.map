{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/test-block.js","webpack:///external {\"this\":[\"wp\",\"blockEditor\"]}","webpack:///external {\"this\":[\"wp\",\"blocks\"]}","webpack:///external {\"this\":[\"wp\",\"components\"]}","webpack:///external {\"this\":[\"wp\",\"element\"]}"],"names":["blockStyle","backgroundColor","color","padding","registerBlockType","title","description","icon","category","keywords","supports","html","customClassName","edit","props","console","log","attributes","attr_test","newValue","setAttributes","value","label","className","save","registerBlockStyle","name"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;CAEA;;AAEA,IAAMA,UAAU,GAAG;AACfC,iBAAe,EAAE,SADF;AAEfC,OAAK,EAAE,SAFQ;AAGfC,SAAO,EAAE;AAHM,CAAnB;AAMAC,2EAAiB,CAAE,uBAAF,EAA2B;AACxCC,OAAK,EAAE,mBADiC;AAExCC,aAAW,EAAE,qDAF2B;AAGxCC,MAAI,EAAE,QAHkC;AAIxCC,UAAQ,EAAE,QAJ8B;AAKxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,UAAQ,EAAE,CAAC,MAAD,EAAS,SAAT,CAnB8B;AAoBxCC,UAAQ,EAAE;AACNC,QAAI,EAAE,KADA;AAENC,mBAAe,EAAE;AAFX,GApB8B;AAwBxCC,MAAI,EAAE,cAAEC,KAAF,EAAa;AACfC,WAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAlB;AACA,WAAO,CACH,yEAAC,yEAAD,QACI,yEAAC,+DAAD;AAAW,WAAK,EAAC;AAAjB,OACI,yEAAC,8DAAD,QAAU,iHAAV,CADJ,EAGI,yEAAC,iEAAD;AACI,WAAK,EAAC,mBADV;AAEI,UAAI,EAAC,6BAFT;AAGI,WAAK,EAAEH,KAAK,CAACG,UAAN,CAAiBC,SAH5B;AAII,cAAQ,EAAE,kBAACC,QAAD;AAAA,eAAcL,KAAK,CAACM,aAAN,CAAoB;AAAEF,mBAAS,EAAEC;AAAb,SAApB,CAAd;AAAA;AAJd,MAHJ,EASI,yEAAC,mEAAD;AACI,WAAK,EAAC,oBADV;AAEI,UAAI,EAAC,yCAFT;AAGI,WAAK,EAAC,UAHV;AAII,aAAO,EAAE,CACL;AAAEE,aAAK,EAAE,UAAT;AAAqBC,aAAK,EAAE;AAA5B,OADK,EAEL;AAAED,aAAK,EAAE,UAAT;AAAqBC,aAAK,EAAE;AAA5B,OAFK;AAJb,MATJ,CADJ,CADG,EAsBH;AAAK,eAAS,EAAER,KAAK,CAACS;AAAtB,OACI,4GAAuB;AAAM,eAAS,EAAC;AAAhB,OAA+BT,KAAK,CAACG,UAAN,CAAiBC,SAAhD,CAAvB,CADJ,CAtBG,CAAP;AA2BH,GArDuC;AAsDxCM,MAAI,EAAE;AAAA,WAAM,IAAN;AAAA,GAtDkC,CAuDxC;;AAvDwC,CAA3B,CAAjB;AA0DAC,4EAAkB,CAAE,uBAAF,EAA2B;AACzCC,MAAI,EAAE,SADmC;AAEzCJ,OAAK,EAAE;AAFkC,CAA3B,CAAlB,C;;;;;;;;;;;ACrEA,aAAa,4CAA4C,EAAE,I;;;;;;;;;;;ACA3D,aAAa,uCAAuC,EAAE,I;;;;;;;;;;;ACAtD,aAAa,2CAA2C,EAAE,I;;;;;;;;;;;ACA1D,aAAa,wCAAwC,EAAE,I","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import './test-block';","import { registerBlockType, registerBlockStyle } from '@wordpress/blocks';\nimport { RichText, InspectorControls } from '@wordpress/block-editor';\nimport { Panel, PanelBody, PanelRow, TextControl, SelectControl } from '@wordpress/components';\n// import { more } from '@wordpress/icons';\n\nconst blockStyle = {\n    backgroundColor: '#f5f5f5',\n    color: '#555555',\n    padding: '12px 20px',\n};\n\nregisterBlockType( 'rem-blocks/test-block', {\n    title: 'Custom Block Test',\n    description: 'A simple block to use as reference for development.',\n    icon: 'smiley',\n    category: 'layout',\n    // attributes: {\n    //     attr_test: {\n    //         type: 'string',\n    //         source: 'text',\n    //         default: 'This is the default text',\n    //         selector: '.test-source',\n    //         // selector: 'p',\n    //     }\n    // },\n    // example: {\n    //     attributes: {\n    //         content: 'Hello World',\n    //     }\n    // },\n    keywords: ['Test', 'Example'],\n    supports: {\n        html: false,\n        customClassName: false,\n    },\n    edit: ( props ) => {\n        console.log(props.attributes);\n        return [\n            <InspectorControls>\n                <PanelBody title=\"My Block Settings\">\n                    <PanelRow><p>My Panel Inputs and Labels</p></PanelRow>\n\n                    <TextControl \n                        label=\"This is the label\" \n                        help=\"These are some instructions\" \n                        value={props.attributes.attr_test}\n                        onChange={(newValue) => props.setAttributes({ attr_test: newValue })}\n                    />\n                    <SelectControl \n                        label=\"This is a selector\"\n                        help=\"These are instructions for the selector\"\n                        value=\"option-1\"\n                        options={[\n                            { value: 'option-1', label: 'Option 1' },\n                            { value: 'option-2', label: 'Option 2' },\n                        ]}\n                    />\n                </PanelBody>\n            </InspectorControls>,\n            <div className={props.className}>\n                <p>Using an attribute: <span className=\"test-source\">{props.attributes.attr_test}</span></p>\n                \n            </div>\n        ]\n    },\n    save: () => null\n    // save: ( props ) => <div className={props.className}>Hello, World!</div>,\n});\n\nregisterBlockStyle( 'rem-blocks/test-block', {\n    name: 'style-1',\n    label: 'Style 1'\n});\n","(function() { module.exports = this[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = this[\"wp\"][\"blocks\"]; }());","(function() { module.exports = this[\"wp\"][\"components\"]; }());","(function() { module.exports = this[\"wp\"][\"element\"]; }());"],"sourceRoot":""}